ggplot(aes(x=x,y=price),data=diamonds) +
geom_point()
library(ggplot)
library(ggplot2)
ggplot(aes(x=x,y=price),data=diamonds) +
geom_point()
cor.test(diamonds$price, diamonds$z, method = "pearson")
cor.test(diamonds$price, diamonds$y, method = "pearson")
cor.test(diamonds$price, diamonds$x, method = "pearson")
?c()
c(40:80,2)
seq(from=40,to=80,by=2)
ggplot(aes(x=depth,y=price),data=diamonds) +
geom_point(alpha = 1/100)+
scale_x_continuous(breaks=c(seq(from=40,to=80,by=2)))
ggplot(aes(x=depth,y=price),data=diamonds) +
geom_point(alpha = 1/100)+
scale_x_continuous(breaks=c(seq(from=50,to=70,by=2)))
ggplot(aes(x=depth,y=price),data=diamonds) +
geom_point(alpha = 1/100)+
scale_x_continuous(xlim=c(50,70),breaks=c(seq(from=50,to=70,by=2)))
ggplot(aes(x=depth,y=price),data=diamonds) +
geom_point(alpha = 1/100)+
scale_x_continuous(limits=c(50,70),breaks=c(seq(from=50,to=70,by=2)))
ggplot(aes(x=depth,y=price),data=diamonds) +
geom_point(alpha = 1/100)+
scale_x_continuous(limits=c(56,68),breaks=c(seq(from=56,to=68,by=2)))
cor.test(diamonds$price, diamonds$depth, method = "pearson")
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point()
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point() +
xlim(0,quantile(carat,0.99))+
ylim(0,quantile(price,0.99))
ggplot(aes(x=carat,y=price),data=diamonds) +
geom_point() +
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))
diamonds$volume <- diamonds$x * diamonds$y * diamonds$z
ggplot(aes(x=volume,y=price),data=diamonds) +
geom_point()
ggplot(aes(x=volume,y=price),data=diamonds,xlim = c(0,500)) +
geom_point()
ggplot(aes(x=volume,y=price),data=diamonds) +
geom_point() +
xlim = c(0,500)
ggplot(aes(x=volume,y=price),data=diamonds) +
geom_point() +
xlim(0,500)
sub_diamonds <- subset(diamonds, volume>0 & volume <800)
cor.test(sub_diamonds$price, sub_diamonds$volume, method = "pearson")
ggplot(aes(x=volume,y=price),data=sub_diamonds) +
geom_point(alpha = 1/100)+
geom_smooth()
library(dplyr)
suppressMessages(library(ggplot2))
suppressMessages(library(dplyr))
data(diamonds)
diamondsByClarity <- diamonds %>%
group_by(clarity) %>%
summarise(mean_price = mean(price),
median_price = median(price),
min_price = min(price),
max_price = max(price),
n = n()) %>%
arrange(clarity)
diamonds_by_clarity <- group_by(diamonds, clarity)
diamonds_mp_by_clarity <- summarise(diamonds_by_clarity, mean_price = mean(price))
diamonds_by_color <- group_by(diamonds, color)
diamonds_mp_by_color <- summarise(diamonds_by_color, mean_price = mean(price))
p1 <- ggplot(aes(x=clarity,y=mean_price),data=diamonds_mp_by_clarity)+
geom_bar()
p2 <- ggplot(aes(x=color,y=mean_price),data=diamonds_mp_by_color)+
geom_bar()
library(gridExtra)
#将两个图片放在一起，排成一列
grid.arrange(p2,p1,ncol=1)
grid.arrange(p2,p1,ncol=1)
grid.arrange(p2,p1,ncol=2)
p1 <- ggplot(aes(x=clarity,y=mean_price),data=diamonds_mp_by_clarity)+
geom_bar(position="dodge", stat="identity")
p2 <- ggplot(aes(x=color,y=mean_price),data=diamonds_mp_by_color)+
geom_bar(position="dodge", stat="identity")
p1
p2
grid.arrange(p1,p2,ncol=1)
View(diamonds_mp_by_color)
View(diamonds_mp_by_clarity)
?diamonds
factor(diamonds_mp_by_clarity$clarity)
factor(diamonds_mp_by_color$color)
#重新p排列透明度
diamonds_mp_by_clarity$clarity = factor(diamonds_mp_by_clarity$clarity, levels=c("I1", "SI1", "SI2", "VS1", "VS2", "VVS1", "VVS2", "IF"))
p1 <- ggplot(aes(x=clarity,y=mean_price),data=diamonds_mp_by_clarity)+
geom_bar(position="dodge", stat="identity")
#重新排列颜色
diamonds_mp_by_color$color = factor(diamonds_mp_by_color$color, levels=c("J","I","H","G","F","E","D"))
p2 <- ggplot(aes(x=color,y=mean_price),data=diamonds_mp_by_color)+
geom_bar(position="dodge", stat="identity")
library(gridExtra)
#将两个图片放在一起，排成一列
grid.arrange(p1,p2,ncol=1)
View(diamonds_mp_by_clarity)
clear
clean
rm()
?rm()
View(diamonds_mp_by_color)
rm(list=ls())
library(ggplot2)
data("diamonds")
names(diamonds)
?geom_bar
ggplot(data=diamonds,aes(x=prices))+
facet_wrap(~color)
geom_bar(aes(colour=cut))
ggplot(data=diamonds,aes(x=price))+
facet_wrap(~color)
geom_bar(aes(colour=cut))
ggplot(data=diamonds,aes(x=price))+
facet_wrap(~color)
geom_bar()
ggplot(data=diamonds,aes(x=price))+
facet_wrap(~color)
geom_bar(width=5)
ggplot(data=diamonds,aes(x=price))+
facet_wrap(~color)
geom_bar(binwidth=5)
ggplot(data=diamonds,aes(x=price))
geom_bar()
ggplot(data=diamonds,aes(x=price))+
geom_bar()
ggplot(data=diamonds,aes(x=price))+
geom_bar(width=20)
ggplot(data=diamonds,aes(x=log(price))+
geom_bar(width=20)
setwd("~/GitHub/Data-Engineering-Study/R/探索多个变量")
ggplot(data=diamonds,aes(x=log(price)))+
geom_bar(width=20)
ggplot(data=diamonds,aes(x=log(price)))+
geom_bar(width=5)
ggplot(data=diamonds,aes(x=log(price)))+
geom_bar()
ggplot(data=diamonds,aes(x=log(price)))+
geom_bar(width=1)
ggplot(data=diamonds,aes(x=log(price)))+
geom_bar(width=0.5)
ggplot(data=diamonds,aes(x=log(price)))+
geom_bar(width=0.25)
ggplot(data=diamonds,aes(x=log(price)))+
geom_bar(width=0.1)
ggplot(data=diamonds,aes(x=log(price)))+
facet_wrap(~color)
geom_bar(width=0.1)
str(diamonds)
ggplot(data=diamonds,aes(x=log(price)))+
facet_wrap(~color)+
geom_bar(width=0.1)
ggplot(data=diamonds,aes(x=log(price)))+
facet_wrap(~color)+
geom_bar(width=0.1,aes(colour=cut))
ggplot(data=diamonds,aes(x=log(price)))+
facet_wrap(~color)+
geom_bar(width=0.1,aes(colour=cut))+
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(x=log(price)))+
facet_wrap(~color)+
geom_bar(width=0.1,aes(fill=cut))
ggplot(data=diamonds,aes(x=log(price)))+
facet_wrap(~color)+
geom_bar(width=0.1,aes(fill=cut))+
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(x=log(price)))+
facet_wrap(~color)+
geom_bar(width=0.2,aes(fill=cut))+
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(x=log(price)))+
facet_wrap(~color)+
geom_bar(width=0.2,aes(fill=cut))+
scale_x_continuous(breaks = seq(5, 10, 1))+
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(x=log(price)))+
facet_wrap(~color)+
geom_bar(width=0.1,aes(fill=cut))+
scale_x_continuous(breaks = seq(5, 10, 1))+
scale_fill_brewer(type = 'qual')
cutprice=c(6,7,8,9)
diamonds$price.bucket <- cut(log(diamonds$price),cutprice)
str(diamonds)
factor(price.bucket)
factor(price$bucket)
factor(diamonds$pricebucket)
factor(diamonds$price.bucket)
cutprice=c(5,6,7,8,9,10)
diamonds$price.bucket <- cut(log(diamonds$price),cutprice)
str(diamonds)
ggplot(data=diamonds,aes(x=price.bucket))+
facet_wrap(~color)+
geom_bar(width=0.1,aes(fill=cut))+
scale_x_continuous(breaks = seq(5, 10, 1))+
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(x=price.bucket))+
facet_wrap(~color)+
geom_bar(width=0.1,aes(fill=cut))
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(x=price.bucket))+
facet_wrap(~color)+
geom_bar(width=0.5,aes(fill=cut))
scale_fill_brewer(type = 'qual')
ggplot(data=diamonds,aes(x=price.bucket))+
facet_wrap(~color)+
geom_bar(width=1,aes(fill=cut))
scale_fill_brewer(type = 'qual')
ggplot(diamonds)+geom_histogram(aes(x=price, fill=cut), position="dodge")
ggplot(diamonds)+geom_histogram(aes(x=price, fill=cut))
ggplot(diamonds)+geom_bar(aes(x=price, fill=cut))
setwd("~/GitHub/Data-Engineering-Study/R/探索多个变量")
library(ggplot2)
data("diamonds")
pf <- read.csv('pseudo_facebook.tsv',sep='\t')
str(pf)
pf$prop_initiated <- pf$friendships_initiated/pf$friend_count
str(pf)
cuttime=c(2004,2009,2011,2012,2014)
pf$year_joined.bucket <- cut(pf$year_joined,cuttime)
pf$year_joined <- floor(2014-pf$tenure/365)
cuttime=c(2004,2009,2011,2012,2014)
pf$year_joined.bucket <- cut(pf$year_joined,cuttime)
ggplot(data=pf) +
geom_line(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket))
ggplot(data=subset(pf,!is.na(prop_initiated))) +
geom_line(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket))
pf$prop_initiated <- 1 - pf$friendships_initiated/pf$friend_count
pf$year_joined <- floor(2014-pf$tenure/365)
cuttime=c(2004,2009,2011,2012,2014)
pf$year_joined.bucket <- cut(pf$year_joined,cuttime)
ggplot(data=subset(pf,!is.na(prop_initiated))) +
geom_line(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket))
pf$prop_initiated <- (pf$friend_count -pf$friendships_initiated)/pf$friend_count
ggplot(data=subset(pf,!is.na(prop_initiated))) +
geom_line(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket))
View(diamonds)
View(pf)
ggplot(
data=subset(pf,!is.na(prop_initiated) & !is.na(year_joined.bucket))) +
geom_line(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket))
ggplot(
data=subset(pf,!is.na(prop_initiated) & !is.na(year_joined.bucket))) +
geom_line(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket))+
xlim(0,100)
ggplot(
data=subset(pf,friend_count>0 & !is.na(year_joined.bucket))) +
geom_line(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket))+
xlim(0,100)
ggplot(
data=subset(pf,friend_count>0 & !is.na(year_joined.bucket))) +
geom_line(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket),stat = 'summary',fun.y = median)
pf$prop_initiated <- pf$friendships_initiated/pf$friend_count
pf$prop_initiated <- pf$friendships_initiated/pf$friend_count
ggplot(
data=subset(pf,friend_count>0 & !is.na(year_joined.bucket))) +
geom_line(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket),stat = 'summary',fun.y = median)
ggplot(
data=subset(pf,friend_count>0 & !is.na(year_joined.bucket))) +
geom_smooth(aes(x=tenure,y=prop_initiated,colour=year_joined.bucket),stat = 'summary',fun.y = median)
ggplot(aes(x=tenure,y=prop_initiated),
data=subset(pf,friend_count>0 & !is.na(year_joined.bucket))) +
geom_smooth(colour=year_joined.bucket),stat = 'summary',fun.y = median)
library(dplyr)
group_by(year_joined.bucket) %>% summarize_each(funs(mean),prop_initiated )
pf %>% filter(friend_count>0) %>% group_by(year_joined.bucket) %>% summarize_each(funs(mean),prop_initiated)
ggplot(data = diamonds,aes(x=cut,y=price/carat)) +
geom_point(aes(colour=color))+
facet_wrap(~clarity)
ggplot(data = diamonds,aes(x=cut,y=price/carat)) +
geom_point(aes(colour=color))+
facet_wrap(~clarity)+
scale_color_brewer(type = 'div')
str(diamonds)
?quantile
ggplot(data=diamonds,aes(x=carat,y=price))+
xlim(0,quantile(carat,0.99))+
xlim(0,quantile(price,0.99))
ggplot(data=diamonds,aes(x=carat,y=price))+
xlim(0,quantile(diamonds$carat,0.99))+
xlim(0,quantile(diamonds$price,0.99))
ggplot(data=diamonds,aes(x=carat,y=price))+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))
ggplot(data=diamonds,aes(x=carat,y=price))+
geom_point()+
xlim(0,quantile(diamonds$carat,0.99))+
ylim(0,quantile(diamonds$price,0.99))
